
// This page is the home page
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import styles from '@/styles/Home.module.css'
import Paint from '@/components/Paint'
import MessageBox from '@/components/MessageBox'
import { useState } from "react"
import Score from '@/components/Score'
import Container from '@/components/Container'
import Button from "../components/Button"
import Title from '@/components/Title'
import Text from '@/components/Text'
import bg from '../../public/game1jaune.jpg'
import TypeIt from "typeit-react";


export default function Game1() {
  const [score, setScore]= useState(0);
  const [scene, setScene]= useState(0);

  const scoreToWin = 7;

  function increaseScore(){
    // Add point to score
    setScore(score + 1);
    if (score == scoreToWin - 1) {
      setScene(3);
    }
  };

  function changeScene(){
    setScene(scene + 1);
  }

  <Head>
  <title>Game 1</title>
  <meta name="description" content="Generated by create next app" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" href="/favicon.ico" />
  </Head>

  switch (scene) {
    case 1:
    return (
      <div className='relative'>
      <Paint itemClick={increaseScore} class="max-w-none " src="/jour_des_morts.jpg"/>
      <div className='fixed top-5 w-screen'>
        <div className='mx-4 p-4 border-2 border-primary/50 bg-black/80 rounded-md'>
        <div className="flex justify-center">
  <div>
    <div className="dropdown relative">
      <button
        className="
          dropdown-toggle
          px-6
          py-2.5
          bg-blue-600
          text-white
          font-medium
          text-xs
          leading-tight
          uppercase
          rounded
          shadow-md
          hover:bg-blue-700 hover:shadow-lg
          focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0
          active:bg-blue-800 active:shadow-lg active:text-white
          transition
          duration-150
          ease-in-out
          flex
          items-center
          whitespace-nowrap
        "
        type="button"
        id="dropdownMenuButton1"
        data-bs-toggle="dropdown"
        aria-expanded="false"
      >
        Dropdown button
        <svg
          aria-hidden="true"
          focusable="false"
          data-prefix="fas"
          data-icon="caret-down"
          className="w-2 ml-2"
          role="img"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 320 512"
        >
          <path
            fill="currentColor"
            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
          ></path>
        </svg>
      </button>
      <ul
        className="
          dropdown-menu
          min-w-max
          absolute
          hidden
          bg-white
          text-base
          z-50
          float-left
          py-2
          list-none
          text-left
          rounded-lg
          shadow-lg
          mt-1
          hidden
          m-0
          bg-clip-padding
          border-none
        "
        aria-labelledby="dropdownMenuButton1"
      >
        <li>
          <a
            className="
              dropdown-item
              text-sm
              py-2
              px-4
              font-normal
              block
              w-full
              whitespace-nowrap
              bg-transparent
              text-gray-700
              hover:bg-gray-100
            "
            href="#"
            >Action</a
          >
        </li>
       
      </ul>
    </div>
  </div>
</div>
        <span className='text-primary'>ouui oui la vraie histoire</span>
        </div>
      </div>
      <Score score={score}/>
      </div>
      )
      case 2:
      return (
        <div className='relative'>
        <Paint itemClick={increaseScore} class="max-w-none " src="/jour_des_morts.jpg"/>
        <Score score={score}/>
        </div>
        )
        case 3:
        return (
          <div className='w-screen h-screen px-4 pt-12'>
          <Title text ="bravo"/>
          <div className='h-5/6 flex flex-col justify-between'>
            <div className='mt-12 w-full'>
            <h3 className='text-primary uppercase'>
              <TypeIt options={{
              strings: ["IDENTIFICATION DES ERREURS : COMPLETE ","objectif : atteint"],
              speed: 10,
              waitUntilVisible: true,
              }}>
              </TypeIt>
            </h3>
            </div>
            <MessageBox>
            <TypeIt options={{
              strings: ["Passez au niveau suivant"],
              speed: 10,
              waitUntilVisible: true,
              startDelay: 4000,
              }} className="text-primary">
            </TypeIt>
          {/* <Text text="En réalité, je vous ai proposé cette expérience pour répondre à une problématique grandissante : la consommation toujours plus rapides des œuvres d’art présentées dans les musées."/> */}
          </MessageBox>
          <div className='mx-auto'>
          <Link href="/game2"><Button text="SUIVANT"/></Link>
          </div>
          </div>
          </div>
          )
          default:
          return (

            <div className='h-screen relative overflow-hidden'>
            <img className='absolute h-screen max-w-none z-0' src="/game1jaune.jpg" alt="" />
            <Container>
            <div className='h-screen flex flex-col justify-center'>

            <div className='w-full bg-black bg-opacity-70 p-4 rounded-md border-2 border-primary z-50'>
            <div className='flex flex-col gap-y-16'>
            <div className='w-full text-center'>
            <Title text="TROUVEZ LES 7 ERREURS"/>
            <span className='font-offbit text-primary'>Niveau 1</span>
            </div>
            <TypeIt
              options={{
              strings: ["Déplacez-vous dans les tableau pour trouver les erreurs."," ",
              "Générez la réinterprétation de l’histoire en cliquant sur les erreurs."],
              speed: 10,
              waitUntilVisible: true,

            }}className ="text-primary">
            </TypeIt>
            <div className='w-full flex justify-center'>
            <Button text="Jouer" onClick={changeScene}/>
            </div>
            </div>
            </div>
            </div>
            </Container>
            </div>
            )
          }

        }
